{"version":3,"sources":["reducers/displayData.js","reducers/rootReducer.js","reducers/secondReducer.js","components/Display.js","components/Formula.js","components/Char.js","containers/AddChar.js","actions/index.js","components/FormulaBt.js","containers/ChangeFormula.js","components/Equality.js","containers/DoEquality.js","App.js","serviceWorker.js","index.js","store.js"],"names":["getStateValue","state","value","indexOf","getFormula","formula","char","console","log","lastChar","slice","getEquality","eval","getEqualityFormula","equality","__webpack_exports__","arguments","length","undefined","isEquality","action","type","newValue","Object","_home_dzmitry_Projects_calc_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","includes","combineReducers","display","filter","result","payload","Display","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","id","className","Component","connect","Formula","Char","onClick","addValue","num","AddChar","dispatch","ownProps","ChangeFormula","FormulaBt","doEquality","Equality","App","components_Formula","components_Display","containers_ChangeFormula","containers_AddChar","DoEquality","Boolean","window","location","hostname","match","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da32486b.chunk.js","sourcesContent":["export default (state = {value:0, formula:'', isEquality:false}, action) => {\n    console.log('reducer state=', state);\n    switch (action.type) {\n     case 'ADD_VALUE':       \n        let newValue = getStateValue(state.value, action.value);\n        return {...state, value: newValue, formula: state.formula+action.value};\n    \n    case 'CHANGE_FORMULA':\n        let value = action.value==='C'? 0 : action.value;\n        let formula = getFormula(state.value, state.formula, action.value);\n        if (formula && formula.includes('=')) {\n            formula = state.value+value;\n        }\n        return {...state, value: value, formula: formula};   \n    \n    case 'DO_EQUALITY':\n        let equality = 0;\n        if (!state.formula.includes('=')) {\n          equality = getEquality(state.formula);\n        }\n        return {...state, value: equality, formula: getEqualityFormula(state.formula, equality), isEquality: true}\n        \n     default:\n      return state\n    }\n}\n\nfunction getStateValue(state, value) {\n    if (value === '.') {\n        if (state.indexOf('.') > -1) {\n            return state;\n        }\n    } else {\n        if (state == '0') {\n            state = '';\n        }        \n    }\n    return state+value;\n}\n\nfunction getFormula(value, formula, char) {\n    console.log('getFormula=',value, formula, char)\n    console.log('formula=',typeof formula);\n    if (!formula) {\n        return '';\n    }    \n    let lastChar = formula.slice(-1);\n    if (char === 'C') {\n        return '';\n    } else if (lastChar==='+' || lastChar==='-' || lastChar==='*' || lastChar==='/') {\n        return formula.slice(0,-1)+char;\n    }\n    return formula+char;\n}\n\nfunction getEquality(formula) {\n    if (!formula) {\n        return '';\n    }\n    let lastChar = formula.slice(-1);\n    if (lastChar==='+' || lastChar==='-' || lastChar==='*' || lastChar==='/') {\n        formula = formula.slice(0,-1);\n    }\n    return eval(formula);\n}\n\nfunction getEqualityFormula(formula, equality) {\n    return formula+'='+equality;\n}","import { combineReducers } from 'redux';\nimport display from './displayData';\nimport filter from './secondReducer';\n\nexport default combineReducers({\n display,\n filter\n});","export default (state = 1, action) => {\n    console.log('reducer state=', state);\n    switch (action.type) {\n     case 'SIMPLE_ACTION':\n      return {\n       result: action.payload\n      }\n     case 'ADD_VALUE1':\n     console.log('ADD_VALUE');\n     return {\n         value: action.value\n     }\n     default:\n      return state\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nclass Display extends Component {\n    constructor(props) {\n      super(props);      \n    }\n    render() {\n      console.log('props=',this.props);\n      return (\n        <div id=\"display\" className=\"div-display\">{this.props.value}</div>\n      )\n    }\n  }\n\n  const mapStateToProps = (state) => {console.log('display state=',state); return {    \n    value: state.display.value\n  }}\n\n  Display = connect(\n    mapStateToProps\n  )(Display)\n  \n  export default Display","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nclass Formula extends Component {\n    constructor(props) {\n      super(props);      \n    }\n    render() {\n      console.log('props=',this.props);\n      return (\n        <div id=\"formula\" className=\"formula-screen\">{this.props.value}</div>\n      )\n    }\n  }\n\n  const mapStateToProps = (state) => ({    \n    value: state.display.formula\n  })\n\n  Formula = connect(\n    mapStateToProps\n  )(Formula)\n  \n  export default Formula","import React, { Component } from 'react';\n\nexport default class Char extends Component {\n    constructor(props) {\n      super(props);\n    }\n    \n    render() {\n      return (\n        <button id={this.props.id} onClick={this.props.addValue} className={this.props.className}>{this.props.num}</button>\n      )\n    }\n}","import Char from '../components/Char';\nimport { addValue } from '../actions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => ({\n    value: state.display.value\n})\n  \nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    addValue: () => dispatch(addValue(ownProps.num))\n})\n  \nconst AddChar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Char)\n\nexport default AddChar;","\nexport const addValue = (value) => ({    \n        type: 'ADD_VALUE',\n        value: value    \n})\n\nexport const changeFormula = (value) => ({\n    type: 'CHANGE_FORMULA',\n    value: value    \n})\n\nexport const doEquality = (value) => ({\n    type: 'DO_EQUALITY',\n    value: value\n})","import React, { Component } from 'react';\n\nexport default class Char extends Component {\n    constructor(props) {\n      super(props);\n    }\n    \n    render() {\n      return (\n        <button id={this.props.id} onClick={this.props.addValue} className={this.props.className}>{this.props.num}</button>\n      )\n    }\n}","import FormulaBt from '../components/FormulaBt';\nimport { changeFormula } from '../actions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => ({\n    value: state.display.value\n})\n  \nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    addValue: () => dispatch(changeFormula(ownProps.num))\n})\n  \nconst ChangeFormula = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormulaBt)\n\nexport default ChangeFormula;","import React, { Component } from 'react';\n\nexport default class Char extends Component {\n    constructor(props) {\n      super(props);\n    }\n    \n    render() {\n      return (\n        <button id={this.props.id} onClick={this.props.doEquality} className={this.props.className}>{this.props.num}</button>\n      )\n    }\n}","import Equality from '../components/Equality';\nimport { doEquality } from '../actions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => ({\n    value: state.display.value\n})\n  \nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    doEquality: () => dispatch(doEquality(ownProps.num))\n})\n  \nconst ChangeFormula = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Equality)\n\nexport default ChangeFormula;","import React, { Component } from 'react';\nimport './App.scss';\nimport Display from './components/Display'\nimport Formula from './components/Formula'\nimport AddChar from './containers/AddChar'\nimport ChangeFormula from './containers/ChangeFormula'\nimport DoEquality from './containers/DoEquality'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-container\">\n          <Formula />\n          <Display />\n          <div>\n            <ChangeFormula num=\"C\" id=\"clear\" className=\"double-width background-yellow\"/>\n            <ChangeFormula num=\"/\" id=\"divide\"/>\n            <ChangeFormula num=\"*\" id=\"multiply\"/>\n            <AddChar num=\"7\" id=\"seven\"/>\n            <AddChar num=\"8\" id=\"eight\"/>\n            <AddChar num=\"9\" id=\"nine\"/>\n            <ChangeFormula num=\"-\" id=\"subtract\"/>\n            <AddChar num=\"4\" id=\"four\"/>\n            <AddChar num=\"5\" id=\"five\"/>\n            <AddChar num=\"6\" id=\"six\"/>          \n            <ChangeFormula num=\"+\" id=\"add\"/>\n            <AddChar num=\"1\" id=\"one\"/>\n            <AddChar num=\"2\" id=\"two\"/>\n            <AddChar num=\"3\" id=\"three\"/>\n            <AddChar num=\"0\" id=\"zero\" className=\"double-width\"/>\n            <AddChar num=\".\" id=\"decimal\"/>\n            <DoEquality num=\"=\" id=\"equals\" className=\"button-equals background-yellow\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore() {\n return createStore(\n  rootReducer,\n   applyMiddleware(thunk)\n );\n}"],"sourceRoot":""}